// Code generated by "enumer -type=FilesystemPlaceholderCreateEncryptionValue -trimprefix=FilesystemPlaceholderCreateEncryption"; DO NOT EDIT.

package zfs

import (
	"fmt"
)

const _FilesystemPlaceholderCreateEncryptionValueName = "InheritOff"

var _FilesystemPlaceholderCreateEncryptionValueIndex = [...]uint8{0, 7, 10}

func (i FilesystemPlaceholderCreateEncryptionValue) String() string {
	i -= 1
	if i < 0 || i >= FilesystemPlaceholderCreateEncryptionValue(len(_FilesystemPlaceholderCreateEncryptionValueIndex)-1) {
		return fmt.Sprintf("FilesystemPlaceholderCreateEncryptionValue(%d)", i+1)
	}
	return _FilesystemPlaceholderCreateEncryptionValueName[_FilesystemPlaceholderCreateEncryptionValueIndex[i]:_FilesystemPlaceholderCreateEncryptionValueIndex[i+1]]
}

var _FilesystemPlaceholderCreateEncryptionValueValues = []FilesystemPlaceholderCreateEncryptionValue{1, 2}

var _FilesystemPlaceholderCreateEncryptionValueNameToValueMap = map[string]FilesystemPlaceholderCreateEncryptionValue{
	_FilesystemPlaceholderCreateEncryptionValueName[0:7]:  1,
	_FilesystemPlaceholderCreateEncryptionValueName[7:10]: 2,
}

// FilesystemPlaceholderCreateEncryptionValueString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func FilesystemPlaceholderCreateEncryptionValueString(s string) (FilesystemPlaceholderCreateEncryptionValue, error) {
	if val, ok := _FilesystemPlaceholderCreateEncryptionValueNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to FilesystemPlaceholderCreateEncryptionValue values", s)
}

// FilesystemPlaceholderCreateEncryptionValueValues returns all values of the enum
func FilesystemPlaceholderCreateEncryptionValueValues() []FilesystemPlaceholderCreateEncryptionValue {
	return _FilesystemPlaceholderCreateEncryptionValueValues
}

// IsAFilesystemPlaceholderCreateEncryptionValue returns "true" if the value is listed in the enum definition. "false" otherwise
func (i FilesystemPlaceholderCreateEncryptionValue) IsAFilesystemPlaceholderCreateEncryptionValue() bool {
	for _, v := range _FilesystemPlaceholderCreateEncryptionValueValues {
		if i == v {
			return true
		}
	}
	return false
}
